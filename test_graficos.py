#!/usr/bin/env python3
"""
Script de prueba para verificar gr√°ficos en Streamlit
"""

import streamlit as st
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import numpy as np
from io import BytesIO

def main():
    st.set_page_config(page_title="Prueba de Gr√°ficos", layout="wide")
    
    st.title("üß™ Prueba de Gr√°ficos en Streamlit")
    st.write("Verificando que matplotlib funcione correctamente en la web...")
    
    # Prueba 1: Gr√°fico simple
    st.subheader("1. Gr√°fico Simple de L√≠nea")
    try:
        fig, ax = plt.subplots(figsize=(10, 6))
        x = np.linspace(0, 10, 100)
        y = np.sin(x)
        ax.plot(x, y, 'b-', linewidth=2, label='sin(x)')
        ax.set_title('Funci√≥n Seno - Prueba de Matplotlib')
        ax.set_xlabel('x')
        ax.set_ylabel('y')
        ax.grid(True, alpha=0.3)
        ax.legend()
        st.pyplot(fig)
        plt.close(fig)
        st.success("‚úÖ Gr√°fico simple generado correctamente")
    except Exception as e:
        st.error(f"‚ùå Error en gr√°fico simple: {str(e)}")
    
    # Prueba 2: Gr√°fico de barras
    st.subheader("2. Gr√°fico de Barras")
    try:
        fig, ax = plt.subplots(figsize=(10, 6))
        categorias = ['Concreto', 'Acero', 'Madera', 'Aluminio']
        valores = [210, 4200, 120, 7000]  # kg/cm¬≤
        colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4']
        
        bars = ax.bar(categorias, valores, color=colors)
        ax.set_title('Resistencias de Materiales')
        ax.set_ylabel('Resistencia (kg/cm¬≤)')
        
        # Agregar valores en las barras
        for bar in bars:
            height = bar.get_height()
            ax.text(bar.get_x() + bar.get_width()/2., height + 50,
                   f'{height}', ha='center', va='bottom')
        
        st.pyplot(fig)
        plt.close(fig)
        st.success("‚úÖ Gr√°fico de barras generado correctamente")
    except Exception as e:
        st.error(f"‚ùå Error en gr√°fico de barras: {str(e)}")
    
    # Prueba 3: Gr√°fico de cortantes y momentos
    st.subheader("3. Gr√°fico de Cortantes y Momentos (Prueba)")
    try:
        # Datos de ejemplo
        L = 6.0  # m
        w = 1000  # kg/m
        x = np.linspace(0, L, 100)
        
        # C√°lculos simples
        R_A = w * L / 2
        V = R_A - w * x
        M = R_A * x - w * x**2 / 2
        
        # Crear figura con subplots
        fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))
        
        # Gr√°fico de cortantes
        ax1.plot(x, V, 'r-', linewidth=2, label='Cortante (V)')
        ax1.axhline(y=0, color='k', linestyle='-', alpha=0.3)
        ax1.fill_between(x, V, 0, alpha=0.3, color='red')
        ax1.set_title('Diagrama de Cortantes - Viga Simplemente Apoyada')
        ax1.set_xlabel('Distancia (m)')
        ax1.set_ylabel('Cortante (kg)')
        ax1.grid(True, alpha=0.3)
        ax1.legend()
        
        # Gr√°fico de momentos
        ax2.plot(x, M, 'b-', linewidth=2, label='Momento (M)')
        ax2.axhline(y=0, color='k', linestyle='-', alpha=0.3)
        ax2.fill_between(x, M, 0, alpha=0.3, color='blue')
        ax2.set_title('Diagrama de Momentos - Viga Simplemente Apoyada')
        ax2.set_xlabel('Distancia (m)')
        ax2.set_ylabel('Momento (kg¬∑m)')
        ax2.grid(True, alpha=0.3)
        ax2.legend()
        
        plt.tight_layout()
        st.pyplot(fig)
        plt.close(fig)
        st.success("‚úÖ Gr√°fico de cortantes y momentos generado correctamente")
    except Exception as e:
        st.error(f"‚ùå Error en gr√°fico de cortantes/momentos: {str(e)}")
    
    # Informaci√≥n del sistema
    st.subheader("4. Informaci√≥n del Sistema")
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("Matplotlib", matplotlib.__version__)
    with col2:
        st.metric("NumPy", np.__version__)
    with col3:
        st.metric("Streamlit", st.__version__)
    
    # Instrucciones
    st.subheader("5. Instrucciones para la App Principal")
    st.info("""
    **Para ver gr√°ficos en la app principal:**
    
    1. **Accede a:** http://localhost:8520
    2. **Inicia sesi√≥n como admin:**
       - Usuario: `admin`
       - Contrase√±a: `admin123`
    3. **Ve a "üìà Gr√°ficos"**
    4. **Selecciona "üîß Cortantes y Momentos (McCormac)"**
    5. **Configura los par√°metros y genera diagramas**
    
    **Para el PDF Premium:**
    1. Ve a "Generar Reporte"
    2. Descarga el "PDF Premium"
    3. Verifica que incluya gr√°ficos
    """)

if __name__ == "__main__":
    main() 